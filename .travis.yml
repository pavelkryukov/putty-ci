notifications:
  email: false

language: c
dist: focal
xcode: 12.2

branches:
  only:
  - master

compiler:
  - gcc
  - clang

arch:
  - amd64
  - arm64

os:
  - linux
  - osx

env:
  - TRAVIS_CFLAGS="-O2"
  - TRAVIS_CFLAGS="-O0 -fprofile-arcs -ftest-coverage -g"

matrix:
  exclude:
    - os: osx
      compiler: gcc
    - os: osx
      arch: arm64

addons:
  apt:
    packages:
    - libgtk-3-dev
    - halibut
    - ninja-build
    - python3-pip
  homebrew:
    packages:
    - halibut
    - ninja
    update: true

install:
  - pip3 install --user coverage
  - export PATH=$PATH:/Users/travis/Library/Python/3.9/bin # for OSX builds
  # Build DynamoRIO
  - export DRBUILD=$TRAVIS_BUILD_DIR/dynamorio-build
  - mkdir dynamorio-build
  - if [ "$CC" == "clang" ]; then export COV="llvm-cov gcov"; else export COV="gcov"; fi
  - git clone https://github.com/DynamoRIO/dynamorio.git --depth=1 --branch cronbuild-7.91.18333
  - pushd dynamorio-build && cmake -G Ninja ../dynamorio && ninja drrun libdrreg.so libdrsyms.so && popd
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_CPU_ARCH" == "amd64" ];
    then
      export DOES_DRBUILD=yes
    fi
  # Limit tests on Clang and Debug builds
  - |
    if [ "$CC" == "clang" ] || [ "${TRAVIS_CFLAGS}" != "-O2" ];
    then
      export DRTEST=mp_get_nbits
    fi
  # Use SDE for SHA NI modeling
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_CPU_ARCH" == "amd64" ];
    then
      wget -q https://dl.dropboxusercontent.com/s/${SDE_HASH}/${SDE_ARCHIVE}.tar.bz2
      tar xvf ${SDE_ARCHIVE}.tar.bz2
      export PUTTY_TESTCRYPT='${TRAVIS_BUILD_DIR}/${SDE_ARCHIVE}/sde64 -mix -- $TRAVIS_BUILD_DIR/testcrypt'
    fi

before_script:
  - ./mkfiles.pl
  - autoreconf -fi
  - ./configure --prefix=$TRAVIS_BUILD_DIR CFLAGS="${TRAVIS_CFLAGS}"
  - pushd $TRAVIS_BUILD_DIR/doc && make man && popd

script:
  # Build sclog
  - pushd $TRAVIS_BUILD_DIR/test/sclog && cmake -G Ninja -DCMAKE_PREFIX_PATH=$DRBUILD/cmake . && ninja && popd
  # Build unit tests
  - cd $TRAVIS_BUILD_DIR
  - make testcrypt cgtest testsc
  # Run all
  - ./cgtest
  - coverage run ./test/cryptsuite.py
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then make pageant && ./pageant --exec ./test/agenttest.py; fi
  - if [[ -n "${DOES_DRBUILD}" ]]; then $DRBUILD/bin64/drrun -c test/sclog/libsclog.so -- ./testsc -O /tmp $DRTEST; else ./testsc || true; fi
  # Upload coverage
  - bash <(curl -s https://codecov.io/bash) -x "${COV}"
  # Check that full build is successful
  - make
  # Clean before C-macro driven tests to avoid problems with GCOV report merges
  - git clean -xfd
  - $CC -std=c99 -o scctest stripctrl.c marshal.c utils.c memory.c wcwidth.c -I . -I unix -I charset $TRAVIS_CFLAGS -DSTRIPCTRL_TEST
  - $CC -std=c99 -o treetest tree234.c $TRAVIS_CFLAGS -DTEST
  - $CC -std=c99 -o wctest wildcard.c -I . -I unix -I charset $TRAVIS_CFLAGS -DTESTMODE
  - $CC -std=c99 -o uttest utils.c memory.c marshal.c -DTEST_HOST_STRFOO $TRAVIS_CFLAGS
  - ./scctest
  - ./treetest > /dev/null
  - ./wctest
  - ./uttest
  - bash <(curl -s https://codecov.io/bash) -x "${COV}" -X coveragepy
